[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Grade",
        "importPath": "classroom.models",
        "description": "classroom.models",
        "isExtraImport": true,
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "classroom.models",
        "description": "classroom.models",
        "isExtraImport": true,
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "Grade",
        "importPath": "classroom.models",
        "description": "classroom.models",
        "isExtraImport": true,
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "classroom.models",
        "description": "classroom.models",
        "isExtraImport": true,
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "classroom",
        "description": "classroom",
        "isExtraImport": true,
        "detail": "classroom",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "GradeForm",
        "importPath": "classroom.forms",
        "description": "classroom.forms",
        "isExtraImport": true,
        "detail": "classroom.forms",
        "documentation": {}
    },
    {
        "label": "SubjectForm",
        "importPath": "classroom.forms",
        "description": "classroom.forms",
        "isExtraImport": true,
        "detail": "classroom.forms",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Parent",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Attendance",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Parent",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Attendance",
        "importPath": "student.models",
        "description": "student.models",
        "isExtraImport": true,
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "student",
        "description": "student",
        "isExtraImport": true,
        "detail": "student",
        "documentation": {}
    },
    {
        "label": "ParentForm",
        "importPath": "student.forms",
        "description": "student.forms",
        "isExtraImport": true,
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "StudentForm",
        "importPath": "student.forms",
        "description": "student.forms",
        "isExtraImport": true,
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "AttendanceForm",
        "importPath": "student.forms",
        "description": "student.forms",
        "isExtraImport": true,
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.asgi",
        "description": "app.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-=zm#@t-u4aqr^g8oco(lo*0g$b5red_-=zy6f)0!7ncet(rk8k'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-=zm#@t-u4aqr^g8oco(lo*0g$b5red_-=zy6f)0!7ncet(rk8k'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'student',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'student',\n    'classroom'\n]",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'app.urls'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ROOT_URLCONF = 'app.urls'\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_REDIRECT_URL = \"/accounts/login\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = \"/\"\nLOGOUT_REDIRECT_URL = \"/accounts/login\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = \"/accounts/login\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "WSGI_APPLICATION = 'app.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'school_db',\n        'USER': 'postgres',\n        'PASSWORD': '123',\n        'HOST': 'localhost',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'school_db',\n        'USER': 'postgres',\n        'PASSWORD': '123',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nMEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MEDIA_URL = '/media/'  # URL to serve media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Absolute filesystem path to the media directory\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('accounts/', include('django.contrib.auth.urls')),\n    path('', dashboard, name='dashboard'),\n    # bring student urls to app\n    path('student/', include('student.urls')),\n    path('classroom/', include('classroom.urls'))\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "dashboard",
        "kind": 2,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "def dashboard(request):\n    return render(request, 'dashboard/index.html')",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.wsgi",
        "description": "app.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "classroom.migrations.0001_initial",
        "description": "classroom.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Grade',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('grade_name', models.CharField(max_length=25)),",
        "detail": "classroom.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "classroom.migrations.0002_subject",
        "description": "classroom.migrations.0002_subject",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('classroom', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Subject',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('subject_name', models.CharField(max_length=20)),",
        "detail": "classroom.migrations.0002_subject",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "classroom.migrations.0003_remove_subject_grade_subject_grade",
        "description": "classroom.migrations.0003_remove_subject_grade_subject_grade",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('classroom', '0002_subject'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='subject',\n            name='grade',\n        ),\n        migrations.AddField(",
        "detail": "classroom.migrations.0003_remove_subject_grade_subject_grade",
        "documentation": {}
    },
    {
        "label": "ClassroomConfig",
        "kind": 6,
        "importPath": "classroom.apps",
        "description": "classroom.apps",
        "peekOfCode": "class ClassroomConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'classroom'",
        "detail": "classroom.apps",
        "documentation": {}
    },
    {
        "label": "GradeForm",
        "kind": 6,
        "importPath": "classroom.forms",
        "description": "classroom.forms",
        "peekOfCode": "class GradeForm(forms.ModelForm):\n    class Meta:\n        model = Grade\n        fields = '__all__'\nclass SubjectForm(forms.ModelForm):\n    class Meta:\n        model = Subject\n        fields = '__all__'",
        "detail": "classroom.forms",
        "documentation": {}
    },
    {
        "label": "SubjectForm",
        "kind": 6,
        "importPath": "classroom.forms",
        "description": "classroom.forms",
        "peekOfCode": "class SubjectForm(forms.ModelForm):\n    class Meta:\n        model = Subject\n        fields = '__all__'",
        "detail": "classroom.forms",
        "documentation": {}
    },
    {
        "label": "Grade",
        "kind": 6,
        "importPath": "classroom.models",
        "description": "classroom.models",
        "peekOfCode": "class Grade(models.Model):\n    \"\"\" For grade model. e.g: 12A, 12B\"\"\"\n    grade_name = models.CharField(max_length=25, null=False)\nclass Subject(models.Model):\n    subject_name = models.CharField(max_length=20, null=False)\n    grade = models.ForeignKey(Grade, related_name='grade_id', on_delete=models.CASCADE, default=1)",
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "classroom.models",
        "description": "classroom.models",
        "peekOfCode": "class Subject(models.Model):\n    subject_name = models.CharField(max_length=20, null=False)\n    grade = models.ForeignKey(Grade, related_name='grade_id', on_delete=models.CASCADE, default=1)",
        "detail": "classroom.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "classroom.urls",
        "description": "classroom.urls",
        "peekOfCode": "urlpatterns = [\n    path('assign-grades/', views.assign_grades, name=\"classroom-assign-grade\"),\n    path('grades/', views.grades, name=\"classroom-list-grade\"),\n    path('modify-grade/<int:grade_id>', views.modify_grade, name=\"classroom-modify-grade\"),\n    path('delete-grade/<int:grade_id>', views.delete, name=\"classroom-delete-grade\"),\n    path('create-subject/', views.create_subject, name=\"classroom-create-subject\"),\n    path('subjects/', views.subjects, name=\"classroom-list-subject\"),\n]",
        "detail": "classroom.urls",
        "documentation": {}
    },
    {
        "label": "assign_grades",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def assign_grades(request):\n    if request.method == \"POST\":\n        form = GradeForm(request.POST)\n        if form.is_valid():\n            grade_name = request.POST.get('grade_name')\n            data = Grade(grade_name=grade_name)\n            data.save()\n            messages.success(request, 'Grade has been assigned.')\n            return HttpResponseRedirect('/classroom/grades')\n    else: ",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "grades",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def grades(request):\n    \"\"\"Retrieved grades list\n    Args:\n        request (_type_): _description_\n    \"\"\"\n    grade_list = Grade.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(grade_list, 5)\n    try:\n        grade_list = paginator.page(page)",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "modify_grade",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def modify_grade(request, grade_id):\n    grade = get_object_or_404(Grade, id=grade_id)\n    if request.method == \"POST\":\n        grade.grade_name = request.POST.get('grade_name')\n        grade.save()\n        messages.success(request, 'Grade modified.')\n        return HttpResponseRedirect(\"/classroom/grades\")\n    return render(request, 'classroom/grades/modify.html', {'grade': grade})\ndef delete(request, grade_id):\n    grade = get_object_or_404(Grade, id=grade_id)",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "delete",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def delete(request, grade_id):\n    grade = get_object_or_404(Grade, id=grade_id)\n    if request.method == \"POST\":\n        grade.delete()\n        messages.success(request, 'Grade destroyed.')\n        return HttpResponseRedirect(\"/classroom/grades\")\ndef create_subject(request) :\n    if request.method == \"POST\":\n        print('DD::: Create subject works.')\n    return render(request, 'classroom/subjects/assign.html')",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "create_subject",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def create_subject(request) :\n    if request.method == \"POST\":\n        print('DD::: Create subject works.')\n    return render(request, 'classroom/subjects/assign.html')\ndef subjects(request):\n    \"\"\" List data to templates.\"\"\"\n    subject_list = Subject.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(subject_list, 5)\n    try:",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "subjects",
        "kind": 2,
        "importPath": "classroom.views",
        "description": "classroom.views",
        "peekOfCode": "def subjects(request):\n    \"\"\" List data to templates.\"\"\"\n    subject_list = Subject.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(subject_list, 5)\n    try:\n        subject_list = paginator.page(page)\n    except PageNotAnInteger:\n        subject_list = paginator.page(1)\n    except EmptyPage:",
        "detail": "classroom.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "student.migrations.0001_initial",
        "description": "student.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Parent',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('parent_of_student', models.CharField(max_length=50)),",
        "detail": "student.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "student.migrations.0002_attendance",
        "description": "student.migrations.0002_attendance",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('student', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Attendance',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('date', models.DateField()),",
        "detail": "student.migrations.0002_attendance",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "student.migrations.0003_attendance_student",
        "description": "student.migrations.0003_attendance_student",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('student', '0002_attendance'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='attendance',\n            name='student',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='student.student'),\n        ),",
        "detail": "student.migrations.0003_attendance_student",
        "documentation": {}
    },
    {
        "label": "StudentConfig",
        "kind": 6,
        "importPath": "student.apps",
        "description": "student.apps",
        "peekOfCode": "class StudentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'student'",
        "detail": "student.apps",
        "documentation": {}
    },
    {
        "label": "ParentForm",
        "kind": 6,
        "importPath": "student.forms",
        "description": "student.forms",
        "peekOfCode": "class ParentForm(forms.Form):\n    class Meta:\n        model = Parent\n        fields = \"__all__\"\nclass StudentForm(forms.Form):\n    class Meta:\n        model = Student\n        fields = \"__all__\"\nclass AttendanceForm(forms.Form):\n    class Meta:",
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "StudentForm",
        "kind": 6,
        "importPath": "student.forms",
        "description": "student.forms",
        "peekOfCode": "class StudentForm(forms.Form):\n    class Meta:\n        model = Student\n        fields = \"__all__\"\nclass AttendanceForm(forms.Form):\n    class Meta:\n        model = Attendance\n        fields = \"__all__\"",
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "AttendanceForm",
        "kind": 6,
        "importPath": "student.forms",
        "description": "student.forms",
        "peekOfCode": "class AttendanceForm(forms.Form):\n    class Meta:\n        model = Attendance\n        fields = \"__all__\"",
        "detail": "student.forms",
        "documentation": {}
    },
    {
        "label": "Parent",
        "kind": 6,
        "importPath": "student.models",
        "description": "student.models",
        "peekOfCode": "class Parent(models.Model):\n    \"\"\"\n         Parent model fields\n     \"\"\"\n    parent_of_student = models.CharField(max_length=50, null=False)\n    phone = models.CharField(max_length=50)\n    email = models.EmailField()\n    created_at = models.DateField(auto_now=True)\nclass Student(models.Model):\n    \"\"\"",
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "student.models",
        "description": "student.models",
        "peekOfCode": "class Student(models.Model):\n    \"\"\"\n    Student model fields\n    \"\"\"\n    firstname = models.CharField(max_length=25, null=False)\n    lastname = models.CharField(max_length=25, null=False)\n    gender = models.IntegerField()\n    date_of_birth = models.DateField(null=False)\n    date_of_joined = models.DateField(null=False)\n    parent = models.ForeignKey(Parent, on_delete=models.CASCADE)",
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "Attendance",
        "kind": 6,
        "importPath": "student.models",
        "description": "student.models",
        "peekOfCode": "class Attendance(models.Model):\n    \"\"\"\n        Remark store 0, 1, 2 (0=P, 1=L, 2=A)\n    \"\"\"\n    student = models.ForeignKey(Student, on_delete=models.CASCADE, default=1)\n    date = models.DateField()\n    remark = models.IntegerField()\n    created_at = models.DateField(auto_now=True)",
        "detail": "student.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "student.urls",
        "description": "student.urls",
        "peekOfCode": "urlpatterns = [\n    path('enrollment/', views.student_enrollment, name='student-enrollment'),\n    path('listing/', views.student_list, name='student-list'),\n    path('modifying/<int:sid>', views.modify_student, name='student-modify'),\n    path('update/<int:sid>', views.update_student, name='student-update'),\n    path('parent/', views.register_parent, name='parent-register'),\n    path('parents/', views.parents, name='parent-list'),\n    path('parents/<int:pid>', views.delete_parent_by_id, name='parent-delete'),\n    path('parents/modifying/<int:pid>', views.modify_parent, name='parent-modify'),\n    path('parents/update/<int:pid>', views.update_parent, name='parent-update'),",
        "detail": "student.urls",
        "documentation": {}
    },
    {
        "label": "student_enrollment",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def student_enrollment(request):\n    parent_id = Parent.objects.all()\n    if request.method == \"POST\":\n        form = StudentForm(request.POST)\n        if form.is_valid():\n            firstname = request.POST.get('firstname')\n            lastname = request.POST.get('lastname')\n            gender = request.POST.get('gender')\n            dob = request.POST.get('dob')\n            date_joined = request.POST.get('date_joined')",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "student_list",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def student_list(request):\n    students = Student.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(students, 5)\n    try:\n        students = paginator.page(page)\n    except PageNotAnInteger:\n        students = paginator.page(1)\n    except EmptyPage:\n        students = paginator.page(paginator.num_pages)",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "modify_student",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def modify_student(request, sid):\n    \"\"\" modify_parent student's parent by their id\n        bring value to form for make changes\n    \"\"\"\n    student = Student.objects.filter().get(id=sid)\n    parent_id = Parent.objects.all()\n    context = {\n        'student': student,\n        'parent_id': parent_id\n    }",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "update_student",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def update_student(request, sid):\n    student = get_object_or_404(Student, id=sid)\n    if request.method == \"POST\":\n        student.firstname = request.POST.get('new_firstname')\n        student.lastname = request.POST.get('new_lastname')\n        student.gender = request.POST.get('new_gender')\n        student.date_of_birth = request.POST.get('new_dob')\n        student.date_joined = request.POST.get('new_date_joined')\n        student.parent_id = request.POST.get('new_parent_id')\n        if 'new_photo' in request.FILES:",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "register_parent",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def register_parent(request):\n    if request.method == 'POST':\n        form = ParentForm(request.POST)\n        if form.is_valid():\n            parent_of = request.POST.get('parent_of')\n            phone = request.POST.get('phone')\n            email = request.POST.get('email')\n            # save to database\n            data = Parent(\n                parent_of_student=parent_of,",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "parents",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def parents(request):\n    \"\"\" Parent Listing \"\"\"\n    parent_list = Parent.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(parent_list, 5)\n    try:\n        parent_list = paginator.page(page)\n    except PageNotAnInteger:\n        parent_list = paginator.page(1)\n    except EmptyPage:",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "delete_parent_by_id",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def delete_parent_by_id(request, pid):\n    \"\"\"deleting student's parent by their id\"\"\"\n    parent = get_object_or_404(Parent, id=pid)\n    if request.method == 'POST':\n        if parent:\n            parent.delete()\n            messages.success(request, 'Parent deleted.')\n            return HttpResponseRedirect('/student/parents')\n        else:\n            messages.error(request, 'An error occurred while deleting.')",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "modify_parent",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def modify_parent(request, pid):\n    \"\"\" modify_parent student's parent by their id\n        bring value to form for make changes\n    \"\"\"\n    parent = Parent.objects.filter().get(id=pid)\n    context = {'parent': parent}\n    return render(request, 'parent/modify.html', context)\ndef update_parent(request, pid):\n    \"\"\"\n        update student's parent",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "update_parent",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def update_parent(request, pid):\n    \"\"\"\n        update student's parent\n        and save to database\n    \"\"\"\n    parent = get_object_or_404(Parent, id=pid)\n    if request.method == 'POST':\n        parent.parent_of_student = request.POST.get('parent_of')\n        parent.phone = request.POST.get('phone')\n        parent.email = request.POST.get('email')",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "search_parent_by_phone",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def search_parent_by_phone(request, p_phone):\n    \"\"\" Search and return parent info\"\"\"\ndef attendance_list(request):\n    \"\"\" List of attendance\"\"\"\n    attendances = Attendance.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(attendances, 4)\n    try:\n        attendances = paginator.page(page)\n    except PageNotAnInteger:",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "attendance_list",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def attendance_list(request):\n    \"\"\" List of attendance\"\"\"\n    attendances = Attendance.objects.all().order_by('id')\n    page = request.GET.get('page', 1)\n    paginator = Paginator(attendances, 4)\n    try:\n        attendances = paginator.page(page)\n    except PageNotAnInteger:\n        attendances = paginator.page(1)\n    except EmptyPage:",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "create_attendance",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def create_attendance(request):\n    students = Student.objects.all()\n    if request.method == \"POST\":\n        form = AttendanceForm(request.POST)\n        if form.is_valid():\n            date = request.POST.get('date')\n            remark = request.POST.get('remark')\n            student_id = request.POST.get('student_id')\n            form_fields = Attendance(\n                date=date,",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "modify_attendance",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def modify_attendance(request, attendance_id):\n    attendance = get_object_or_404(Attendance, id=attendance_id)\n    student = attendance.student\n    if request.method == \"POST\":\n        # attendance.date = request.POST.get('date')\n        attendance.remark = request.POST.get('remark')\n        attendance.save()\n        messages.success(request, 'Attendance modified.')\n        return HttpResponseRedirect('/student/attendances')\n    context = {'student': student, 'attendance': attendance}",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "delete_attendance",
        "kind": 2,
        "importPath": "student.views",
        "description": "student.views",
        "peekOfCode": "def delete_attendance(request, attendance_id):\n    attendance = get_object_or_404(Attendance, id=attendance_id)\n    if request.method == 'POST':\n        if attendance:\n            attendance.delete()\n            messages.success(request, 'Attendance deleted.')\n            return HttpResponseRedirect('/student/attendances')\n        else:\n            messages.error(request, 'An error occurred while deleting.')",
        "detail": "student.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]